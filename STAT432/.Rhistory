smoke = factor(smoke, labels = c("non-smoker", "smoker")))
# test-train split
bwt_trn_idx = sample(nrow(bwt), size = 0.8 * nrow(bwt))
bwt_trn = bwt[bwt_trn_idx, ]
bwt_tst = bwt[-bwt_trn_idx, ]
# estimation-validation split
bwt_est_idx = sample(nrow(bwt_trn), size = 0.8 * nrow(bwt_trn))
bwt_est = bwt_trn[bwt_est_idx, ]
bwt_val = bwt_trn[-bwt_est_idx, ]
# check data
head(bwt_trn)
#KNN prediction
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=19)
predictK = data.frame(age = 31, lwt = 124, smoke = factor(levels(bwt_trn$smoke)))
predict(mod_k,predictK)
#descision tree prediction
tree_1 = rpart(bwt~lwt + age + smoke,data = bwt_trn,cp = .5)
predictTree = data.frame(age = 29, lwt = 132, smoke = factor(levels(bwt_trn$smoke)))
predict(tree_1,predictTree)
#Linear and KNN
mods = list(
mod_inter = lm(bwt~1,data = bwt_est),#model w only an intercept
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=count(bwt_est))
)
mom1 = data.frame(age = 33, lwt = 129,smoke=factor(levels(bwt_est$smoke)))
mom2 = data.frame(age = 29, lwt = 118,smoke=factor(levels(bwt_est$smoke)))
mom3 = data.frame(age = 37, lwt = 113,smoke=factor(levels(bwt_est$smoke)))
predict(mods,mom1)
predict(mods,mom2)
predict(mods,mom3)
#KNN all variables
mod_k_all = knnreg(bwt~., data = bwt_est,k=1)#have to turn mod_k_all into a list to work w map function
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(mod_k_all,bwt_val))
#TrainRMSE [trn to test] model w lowest RMSE
mod_k_all_fin = knnreg(bwt~., data = bwt_trn,k=1
>
#TrainRMSE [trn to test] model w lowest RMSE
mod_k_all_fin = knnreg(bwt~., data = bwt_trn,k=1)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_k_all_fin,bwt_tst))
#TrainRMSE [trn to test] model w lowest RMSE
mod_k_all_fin = knnreg(bwt~., data = bwt_est,k=1)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_k_all_fin,bwt_tst))
#TrainRMSE [trn to test] model w lowest RMSE
mod_k_all_fin = knnreg(bwt~., data = bwt_trn,k=1)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_k_all_fin,bwt_tst))
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all_fin,bwt_est))
#TrainRMSE [trn to est in this case] model w lowest RMSE
mod_k_all_fin = knnreg(bwt~., data = bwt_trn,k=1)
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all_fin,bwt_est))
#TrainRMSE [trn to est in this case] model w lowest RMSE
mod_k_all_fin = knnreg(bwt~., data = bwt_est,k=1)
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all_fin,bwt_est))
#3.9&3.10&3.11&3.12
# set seed
set.seed(33115)
# load data
bwt = as_tibble(MASS::birthwt)
# data prep
bwt = bwt %>%
select(-low, -ht, -ui) %>%
mutate(race = factor(race, labels = c("white", "black", "other")),
smoke = factor(smoke, labels = c("non-smoker", "smoker")))
# test-train split
bwt_trn_idx = sample(nrow(bwt), size = 0.8 * nrow(bwt))
bwt_trn = bwt[bwt_trn_idx, ]
bwt_tst = bwt[-bwt_trn_idx, ]
# estimation-validation split
bwt_est_idx = sample(nrow(bwt_trn), size = 0.8 * nrow(bwt_trn))
bwt_est = bwt_trn[bwt_est_idx, ]
bwt_val = bwt_trn[-bwt_est_idx, ]
# check data
head(bwt_trn)
#KNN prediction
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=19)
predictK = data.frame(age = 31, lwt = 124, smoke = factor(levels(bwt_trn$smoke)))
predict(mod_k,predictK)
#descision tree prediction
tree_1 = rpart(bwt~lwt + age + smoke,data = bwt_trn,cp = .5)
predictTree = data.frame(age = 29, lwt = 132, smoke = factor(levels(bwt_trn$smoke)))
predict(tree_1,predictTree)
#Linear and KNN
mods = list(
mod_inter = lm(bwt~1,data = bwt_est),#model w only an intercept
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=count(bwt_est))
)
mom1 = data.frame(age = 33, lwt = 129,smoke=factor(levels(bwt_est$smoke)))
mom2 = data.frame(age = 29, lwt = 118,smoke=factor(levels(bwt_est$smoke)))
mom3 = data.frame(age = 37, lwt = 113,smoke=factor(levels(bwt_est$smoke)))
predict(mods,mom1)
predict(mods,mom2)
predict(mods,mom3)
#KNN all variables
mod_k_all = knnreg(bwt~., data = bwt_est,k=1)#have to turn mod_k_all into a list to work w map function
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(mod_k_all,bwt_val))
#TrainRMSE [est to est in this case]
mod_k_all_fin = knnreg(bwt~., data = bwt_est,k=1)
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all_fin,bwt_est))
#descision tree all variable
dtree_all = rpart(bwt~., data = est, cp=0,minsplit=2)
#descision tree all variable
dtree_all = rpart(bwt~., data = bwt_est, cp=0,minsplit=2)
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(dtree_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(dtree_all,bwt_est))
#3.9&3.10&3.11&3.12&3.13
# set seed
set.seed(74483)
# load data
bwt = as_tibble(MASS::birthwt)
# data prep
bwt = bwt %>%
select(-low, -ht, -ui) %>%
mutate(race = factor(race, labels = c("white", "black", "other")),
smoke = factor(smoke, labels = c("non-smoker", "smoker")))
# test-train split
bwt_trn_idx = sample(nrow(bwt), size = 0.8 * nrow(bwt))
bwt_trn = bwt[bwt_trn_idx, ]
bwt_tst = bwt[-bwt_trn_idx, ]
# estimation-validation split
bwt_est_idx = sample(nrow(bwt_trn), size = 0.8 * nrow(bwt_trn))
bwt_est = bwt_trn[bwt_est_idx, ]
bwt_val = bwt_trn[-bwt_est_idx, ]
# check data
head(bwt_trn)
#KNN prediction
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=19)
predictK = data.frame(age = 31, lwt = 124, smoke = factor(levels(bwt_trn$smoke)))
predict(mod_k,predictK)
#descision tree prediction
tree_1 = rpart(bwt~lwt + age + smoke,data = bwt_trn,cp = .5)
predictTree = data.frame(age = 29, lwt = 132, smoke = factor(levels(bwt_trn$smoke)))
predict(tree_1,predictTree)
#Linear and KNN
mods = list(
mod_inter = lm(bwt~1,data = bwt_est),#model w only an intercept
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=count(bwt_est))
)
mom1 = data.frame(age = 33, lwt = 129,smoke=factor(levels(bwt_est$smoke)))
mom2 = data.frame(age = 29, lwt = 118,smoke=factor(levels(bwt_est$smoke)))
mom3 = data.frame(age = 37, lwt = 113,smoke=factor(levels(bwt_est$smoke)))
predict(mods,mom1)
predict(mods,mom2)
predict(mods,mom3)
#KNN all variables
mod_k_all = knnreg(bwt~., data = bwt_est,k=1)#have to turn mod_k_all into a list to work w map function
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(mod_k_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all,bwt_est))
#descision tree all variable
dtree_all = rpart(bwt~., data = bwt_est, cp=0,minsplit=2)
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(dtree_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(dtree_all,bwt_est))
#KNN all variables different K
mod_list = list(
mod_k_all1 = knnreg(bwt~.,data = bwt_est, k=15),
mod_k_all2 = knnreg(bwt~.,data = bwt_est, k=27),
mod_k_all3 = knnreg(bwt~.,data = bwt_est, k=36)
)
#calculation for validation RMSE [est to val]
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, actual = bwt_val$bwt)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to test]
mod_final = knnreg(bwt~.,data = bwt_trn)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#3.9&3.10&3.11&3.12&3.13
# set seed
set.seed(470)
# load data
bwt = as_tibble(MASS::birthwt)
# data prep
bwt = bwt %>%
select(-low, -ht, -ui) %>%
mutate(race = factor(race, labels = c("white", "black", "other")),
smoke = factor(smoke, labels = c("non-smoker", "smoker")))
# test-train split
bwt_trn_idx = sample(nrow(bwt), size = 0.8 * nrow(bwt))
bwt_trn = bwt[bwt_trn_idx, ]
bwt_tst = bwt[-bwt_trn_idx, ]
# estimation-validation split
bwt_est_idx = sample(nrow(bwt_trn), size = 0.8 * nrow(bwt_trn))
bwt_est = bwt_trn[bwt_est_idx, ]
bwt_val = bwt_trn[-bwt_est_idx, ]
# check data
head(bwt_trn)
#KNN prediction
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=19)
predictK = data.frame(age = 31, lwt = 124, smoke = factor(levels(bwt_trn$smoke)))
predict(mod_k,predictK)
#descision tree prediction
tree_1 = rpart(bwt~lwt + age + smoke,data = bwt_trn,cp = .5)
predictTree = data.frame(age = 29, lwt = 132, smoke = factor(levels(bwt_trn$smoke)))
predict(tree_1,predictTree)
#Linear and KNN
mods = list(
mod_inter = lm(bwt~1,data = bwt_est),#model w only an intercept
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=count(bwt_est))
)
mom1 = data.frame(age = 33, lwt = 129,smoke=factor(levels(bwt_est$smoke)))
mom2 = data.frame(age = 29, lwt = 118,smoke=factor(levels(bwt_est$smoke)))
mom3 = data.frame(age = 37, lwt = 113,smoke=factor(levels(bwt_est$smoke)))
predict(mods,mom1)
predict(mods,mom2)
predict(mods,mom3)
#KNN all variables
mod_k_all = knnreg(bwt~., data = bwt_est,k=1)#have to turn mod_k_all into a list to work w map function
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(mod_k_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all,bwt_est))
#descision tree all variable
dtree_all = rpart(bwt~., data = bwt_est, cp=0,minsplit=2)
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(dtree_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(dtree_all,bwt_est))
#KNN all variables different K
mod_list = list(
mod_k_all1 = knnreg(bwt~.,data = bwt_est, k=15),
mod_k_all2 = knnreg(bwt~.,data = bwt_est, k=27),
mod_k_all3 = knnreg(bwt~.,data = bwt_est, k=36)
)
#calculation for validation RMSE [est to val]
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to test]
mod_final = knnreg(bwt~.,data = bwt_trn)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#RMSETest [est to est]
mod_final = mod_list[2]
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_final,bwt_est))
#RMSETest [est to est]
mod_final = knnreg(bwt~.,data = bwt_est, k=27)
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_final,bwt_est))
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#RMSETest [est to est]
mod_final = knnreg(bwt~.,data = bwt_trn, k=27)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#3.9&3.10&3.11&3.12&3.13
# set seed
set.seed(38178)
# load data
bwt = as_tibble(MASS::birthwt)
# data prep
bwt = bwt %>%
select(-low, -ht, -ui) %>%
mutate(race = factor(race, labels = c("white", "black", "other")),
smoke = factor(smoke, labels = c("non-smoker", "smoker")))
# test-train split
bwt_trn_idx = sample(nrow(bwt), size = 0.8 * nrow(bwt))
bwt_trn = bwt[bwt_trn_idx, ]
bwt_tst = bwt[-bwt_trn_idx, ]
# estimation-validation split
bwt_est_idx = sample(nrow(bwt_trn), size = 0.8 * nrow(bwt_trn))
bwt_est = bwt_trn[bwt_est_idx, ]
bwt_val = bwt_trn[-bwt_est_idx, ]
# check data
head(bwt_trn)
#KNN prediction
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=19)
predictK = data.frame(age = 31, lwt = 124, smoke = factor(levels(bwt_trn$smoke)))
predict(mod_k,predictK)
#descision tree prediction
tree_1 = rpart(bwt~lwt + age + smoke,data = bwt_trn,cp = .5)
predictTree = data.frame(age = 29, lwt = 132, smoke = factor(levels(bwt_trn$smoke)))
predict(tree_1,predictTree)
#Linear and KNN
mods = list(
mod_inter = lm(bwt~1,data = bwt_est),#model w only an intercept
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=count(bwt_est))
)
mom1 = data.frame(age = 33, lwt = 129,smoke=factor(levels(bwt_est$smoke)))
mom2 = data.frame(age = 29, lwt = 118,smoke=factor(levels(bwt_est$smoke)))
mom3 = data.frame(age = 37, lwt = 113,smoke=factor(levels(bwt_est$smoke)))
predict(mods,mom1)
predict(mods,mom2)
predict(mods,mom3)
#KNN all variables
mod_k_all = knnreg(bwt~., data = bwt_est,k=1)#have to turn mod_k_all into a list to work w map function
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(mod_k_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all,bwt_est))
#descision tree all variable
dtree_all = rpart(bwt~., data = bwt_est, cp=0,minsplit=2)
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(dtree_all,bwt_val))
#TrainRMSE [est to est in this case] since only one model
calc_RMSE(act = bwt_est$bwt,pred = predict(dtree_all,bwt_est))
#KNN all variables different K, least flex, highest K
mod_list = list(
mod_k_all1 = knnreg(bwt~.,data = bwt_est, k=14),
mod_k_all2 = knnreg(bwt~.,data = bwt_est, k=26),
mod_k_all3 = knnreg(bwt~.,data = bwt_est, k=48)
)
#calculation for validation RMSE [est to val]
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to tst]
mod_final = knnreg(bwt~.,data = bwt_trn, k=27)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#RMSETest [trn to tst]
mod_final = knnreg(bwt~.,data = bwt_trn, k=48)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#Descision Tree all variables, different cp
mod_list = list(
mod_t_all1 = rpart(bwt~.,data = bwt_est, cp=.1, minsplit = 2),
mod_t_all2 = rpart(bwt~.,data = bwt_est, cp=.01, minsplit = 2),
mod_t_all3 = rpart(bwt~.,data = bwt_est, cp=.001, minsplit = 2)
)
#calculation for validation RMSE [est to val]
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to tst] lowest RMSE
mod_final = rpart(bwt~.,data = bwt_trn, cp=.1, minsplit = 2)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#3.9&3.10&3.11&3.12&3.13
# set seed
set.seed(66905)
# load data
bwt = as_tibble(MASS::birthwt)
# data prep
bwt = bwt %>%
select(-low, -ht, -ui) %>%
mutate(race = factor(race, labels = c("white", "black", "other")),
smoke = factor(smoke, labels = c("non-smoker", "smoker")))
# test-train split
bwt_trn_idx = sample(nrow(bwt), size = 0.8 * nrow(bwt))
bwt_trn = bwt[bwt_trn_idx, ]
bwt_tst = bwt[-bwt_trn_idx, ]
# estimation-validation split
bwt_est_idx = sample(nrow(bwt_trn), size = 0.8 * nrow(bwt_trn))
bwt_est = bwt_trn[bwt_est_idx, ]
bwt_val = bwt_trn[-bwt_est_idx, ]
# check data
head(bwt_trn)
#KNN prediction
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=19)
predictK = data.frame(age = 31, lwt = 124, smoke = factor(levels(bwt_trn$smoke)))
predict(mod_k,predictK)
#descision tree prediction
tree_1 = rpart(bwt~lwt + age + smoke,data = bwt_trn,cp = .5)
predictTree = data.frame(age = 29, lwt = 132, smoke = factor(levels(bwt_trn$smoke)))
predict(tree_1,predictTree)
#Linear and KNN
mods = list(
mod_inter = lm(bwt~1,data = bwt_est),#model w only an intercept
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=count(bwt_est))
)
mom1 = data.frame(age = 33, lwt = 129,smoke=factor(levels(bwt_est$smoke)))
mom2 = data.frame(age = 29, lwt = 118,smoke=factor(levels(bwt_est$smoke)))
mom3 = data.frame(age = 37, lwt = 113,smoke=factor(levels(bwt_est$smoke)))
predict(mods,mom1)
predict(mods,mom2)
predict(mods,mom3)
#KNN all variables
mod_k_all = knnreg(bwt~., data = bwt_est,k=1)#have to turn mod_k_all into a list to work w map function
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(mod_k_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all,bwt_est))
#descision tree all variable
dtree_all = rpart(bwt~., data = bwt_est, cp=0,minsplit=2)
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(dtree_all,bwt_val))
#TrainRMSE [est to est in this case] since only one model
calc_RMSE(act = bwt_est$bwt,pred = predict(dtree_all,bwt_est))
#KNN all variables different K, least flex, highest K
mod_list = list(
mod_k_all1 = knnreg(bwt~.,data = bwt_est, k=14),
mod_k_all2 = knnreg(bwt~.,data = bwt_est, k=26),
mod_k_all3 = knnreg(bwt~.,data = bwt_est, k=48)
)
#calculation for validation RMSE [est to val]
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to tst] lowest RMSE
mod_final = knnreg(bwt~.,data = bwt_trn, k=48)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#Descision Tree all variables, different cp
mod_list = list(
mod_t_all1 = rpart(bwt~.,data = bwt_est, cp=.1, minsplit = 2),
mod_t_all2 = rpart(bwt~.,data = bwt_est, cp=.01, minsplit = 2),
mod_t_all3 = rpart(bwt~.,data = bwt_est, cp=.001, minsplit = 2)
)
#calculation for validation RMSE [est to val]
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to tst] lowest RMSE
mod_final = rpart(bwt~.,data = bwt_trn, cp=.1, minsplit = 2)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#3.9&3.10&3.11&3.12&3.13
# set seed
set.seed(16159)
# load data
bwt = as_tibble(MASS::birthwt)
# data prep
bwt = bwt %>%
select(-low, -ht, -ui) %>%
mutate(race = factor(race, labels = c("white", "black", "other")),
smoke = factor(smoke, labels = c("non-smoker", "smoker")))
# test-train split
bwt_trn_idx = sample(nrow(bwt), size = 0.8 * nrow(bwt))
bwt_trn = bwt[bwt_trn_idx, ]
bwt_tst = bwt[-bwt_trn_idx, ]
# estimation-validation split
bwt_est_idx = sample(nrow(bwt_trn), size = 0.8 * nrow(bwt_trn))
bwt_est = bwt_trn[bwt_est_idx, ]
bwt_val = bwt_trn[-bwt_est_idx, ]
# check data
head(bwt_trn)
#KNN prediction
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=19)
predictK = data.frame(age = 31, lwt = 124, smoke = factor(levels(bwt_trn$smoke)))
predict(mod_k,predictK)
#descision tree prediction
tree_1 = rpart(bwt~lwt + age + smoke,data = bwt_trn,cp = .5)
predictTree = data.frame(age = 29, lwt = 132, smoke = factor(levels(bwt_trn$smoke)))
predict(tree_1,predictTree)
#Linear and KNN
mods = list(
mod_inter = lm(bwt~1,data = bwt_est),#model w only an intercept
mod_k = knnreg(bwt~lwt + age + smoke,data = bwt_trn,k=count(bwt_est))
)
mom1 = data.frame(age = 33, lwt = 129,smoke=factor(levels(bwt_est$smoke)))
mom2 = data.frame(age = 29, lwt = 118,smoke=factor(levels(bwt_est$smoke)))
mom3 = data.frame(age = 37, lwt = 113,smoke=factor(levels(bwt_est$smoke)))
predict(mods,mom1)
predict(mods,mom2)
predict(mods,mom3)
#KNN all variables
mod_k_all = knnreg(bwt~., data = bwt_est,k=1)#have to turn mod_k_all into a list to work w map function
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(mod_k_all,bwt_val))
#TrainRMSE [est to est in this case]
calc_RMSE(act = bwt_est$bwt,pred = predict(mod_k_all,bwt_est))
#descision tree all variable
dtree_all = rpart(bwt~., data = bwt_est, cp=0,minsplit=2)
#Validation RMSE [est to val]
calc_RMSE(act = bwt_val$bwt,pred = predict(dtree_all,bwt_val))
#TrainRMSE [est to est in this case] since only one model
calc_RMSE(act = bwt_est$bwt,pred = predict(dtree_all,bwt_est))
#KNN all variables different K, least flex, highest K
mod_list = list(
mod_k_all1 = knnreg(bwt~.,data = bwt_est, k=14),
mod_k_all2 = knnreg(bwt~.,data = bwt_est, k=26),
mod_k_all3 = knnreg(bwt~.,data = bwt_est, k=48)
)
#calculation for validation RMSE [est to val]
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to tst] lowest RMSE
mod_final = knnreg(bwt~.,data = bwt_trn, k=48)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
#Descision Tree all variables, different cp
mod_list = list(
mod_t_all1 = rpart(bwt~.,data = bwt_est, cp=.1, minsplit = 2),
mod_t_all2 = rpart(bwt~.,data = bwt_est, cp=.01, minsplit = 2),
mod_t_all3 = rpart(bwt~.,data = bwt_est, cp=.001, minsplit = 2)
)
#calculation for validation RMSE [est to val] least flexible is highest cp
val_pred = map(mod_list, predict, bwt_val)
map_dbl(val_pred,calc_RMSE, act = bwt_val$bwt)
#RMSETest [trn to tst] lowest RMSE
mod_final = rpart(bwt~.,data = bwt_trn, cp=.1, minsplit = 2)
calc_RMSE(act = bwt_tst$bwt,pred = predict(mod_final,bwt_tst))
dnorm(9.9,6,1.5)
dnorm(9.9,8.9,1.5)
dnorm(9.9,9.1,1.5)
#5.11
prior = c(.47,.26,.27)
dnorm(9.9,6,1.5)*prior[1]
dnorm(9.9,8.9,1.5)*prior[2]
dnorm(9.9,9.1,1.5)*prior[3]
#5.11
prior = c(.09,.64,.27)
dnorm(5.7,8,1.5)*prior[1]
dnorm(5.7,8.3,1.5)*prior[2]
dnorm(5.7,8.7,1.5)*prior[3]
#5.12
prior = c(.13,.44,.43)
X=3
dnorm(X,3.71)*prior[1]
dnorm(X,5.75)*prior[2]
dnorm(X,8.22)*prior[3]
dpois(X,3.71)*prior[1]
dpois(X,5.75)*prior[2]
dpois(X,8.22)*prior[3]
#5.12
prior = c(.35,.39,.26)
X=3
dpois(X,2.5)*prior[1]
dpois(X,4.67)*prior[2]
dpois(X,4.96)*prior[3]
#5.12
prior = c(.35,.39,.26)
X=5
dpois(X,2.5)*prior[1]
dpois(X,4.67)*prior[2]
dpois(X,4.96)*prior[3]
#5.12
prior = c(.21,.5,.29)
X=4
dpois(X,4.43)*prior[1]
dpois(X,4.8)*prior[2]
dpois(X,8.6)*prior[3]
