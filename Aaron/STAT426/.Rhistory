#lack of fit (sigma^2 unknown)
plot(colonies ~ log(dose + 1), data = salmonella)
#lack of fit (sigma^2 unknown)
plot(colonies ~ I(log(dose + 1)), data = salmonella)
#lack of fit (sigma^2 unknown)
plot(colonies ~ log(dose + 1), data = salmonella)
abline(coef(mod1))
mod1f = lm(colonies ~ factor(log(dose + 1)), data = salmonella)
cbind(salmonella,mod1f$fitted)[order(salmonella$dose)]
cbind(salmonella,mod1f$fitted)[order(salmonella$log(dose + 1)]
cbind(salmonella,mod1f$fitted)[order(salmonella$log(dose + 1))]
mod1f = lm(colonies ~ factor(dose), data = salmonella)
cbind(salmonella,mod1f$fitted)[order(salmonella$dose)]
cbind(salmonella,mod1f$fitted)[order(salmonella$dose),]
#Anova test
anova(mod1,mod1f)
#Anova test
lof_Anova = anova(mod1,mod1f)
lof_Anova
names(lof_Anova)
lof_Anova$F
lof_Anova$F[2]
lof_Anova[Df]
lof_Anova$Df
lof_Anova$Res.Df
1-pf(lof_Anovaq$F[2],lof_Anova$Res.Df[2],lof_Anova$Df[2])
#Anova test
lof_Anova = anova(mod1,mod1f)
1-pf(lof_Anova$F[2],lof_Anova$Res.Df[2],lof_Anova$Df[2])
lof_Anova$Res.Df
1-pf(lof_Anova$F[2],1-lof_Anova$Df[2],lof_Anova$Df[2])
lof_Anova
1-pf(lof_Anova$F[2],4,5)
1-pf(lof_Anova$F[2],4,12)
#Problem 2
data(gammaray)
head(gammaray)
mod1 = lm(colonies ~ log(I(dose + 1)), data = salmonella)
summary(mod1)
mod1 = lm(colonies ~ log(dose + 1), data = salmonella)
summary(mod1)
#Problem 2
data(gammaray)
head(gammaray)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error )
data("strongx")
head(strongx)
View(gammaray)
View(strongx)
summary(mod2u)
mod2u = lm(flux ~ time, data = gammaray)
summary(mod2u)
#Problem 2
data(gammaray)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
summary(mod2)$sig
summary(mod2)$Df
names(summary(mod2))
summary(mod2)$df
#lack of fit test (sigma^2 known, it's given as the error column)
1-pchisq(summary(mod2)$sig^2*sumary(mod2)$df[2],sumary(mod2)$df[2])
#lack of fit test (sigma^2 known, it's given as the error column)
1-pchisq(summary(mod2)$sig^2*61,61
#lack of fit test (sigma^2 known, it's given as the error column)
1-pchisq(summary(mod2)$sig^2*61,61)
#lack of fit test (sigma^2 known, it's given as the error column)
1-pchisq(summary(mod2)$sig^2*61,61)
#weighted model
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
summary(mod2)$sig^2
#estimate sigma-sq
cbind(summary(mod2u)$sig^2, sum(gu$res^2)/61)
#estimate sigma-sq
cbind(summary(mod2u)$sig^2, sum(mod2u$res^2)/61)
#WLS, these two do not agree
summary(mod2)$sig^2
legend("topleft", col=c("red"), lty=c(1,2), legend=c("WLS"))
#Problem 2
data(gammaray)
#weighted model
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
plot(flux ~ time, data = gammaray, cex=sd);
plot(flux ~ time, data = gammaray, cex=error);
points(flux ~ time, data=gammaray, pch=2)
abline(mod2, col="red", lty=1, lwd=2);
legend("topleft", col=c("red"), lty=c(1,2), legend=c("WLS"))
#Trying with poly nomials
mod2sq = lm(flux ~ time + I(time^2), data = gammaray, weights = 1/error^2 )
anova(mod2,mod2sq)
group = data.frame(x=c(0,1,2), number of trials =c(1,1,1), Y = c(1,2,1))
#Problem 2
data(gammaray)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
round(summary(mod2)$coef,dig = 3)
g2 = lm(flux ~ time + I(time^2), data = gammaray, weights = 1/error^2)
round(summary(g2)$coef,dig=3)
g3 = lm(flux ~ time + I(time^2) + I(time^3), data = gammaray , weights = 1/error^2)
round(summary(g3)$coef,dig=3) # Select d=2
summary(mod2)
mod2 = glm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
#Problem 2
data(gammaray)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
g2 = lm(flux ~ time + I(time^2), weights = sd^-2, gammaray)
round(summary(g2)$coef,dig=3)
g3 = lm(flux ~ time + I(time^2) + I(time^3) , weights = sd^-2, gammaray)
round(summary(g3)$coef,dig=3)
g4 = lm(flux ~ time + I(time^2) + I(time^3) + I(time^4), weights = sd^-2, gammaray)
round(summary(g4)$coef,dig=3)
g2 = lm(flux ~ time + I(time^2), weights = error^-2, gammaray)
round(summary(g2)$coef,dig=3)
g3 = lm(flux ~ time + I(time^2) + I(time^3) , weights = error^-2, gammaray)
round(summary(g3)$coef,dig=3)
g4 = lm(flux ~ time + I(time^2) + I(time^3) + I(time^4), weights = error^-2, gammaray)
round(summary(g4)$coef,dig=3)
#Problem 3
data(longley)
head(longley)
mod3 = lm(Employed~.,data = longley)
e$val
#a
#condition number
m3_mat = model.matrix(mod3)[,-1]
e = eigen(t(m3_mat) %.% m3_mat)
e$val
e = eigen(t(m3_mat) %*% m3_mat)
e$val
e$val
summary(mod3)
e$val
length(longley)
#standardize matrix
m3_mat = model.matrix(mod3)[,-1]
m3_mat = m3_mat - matrix(apply(m3_mat, 2, mean), 7,6, byrow = T)
m3_mat = m3_mat - matrix(apply(m3_mat, 2, mean), 7,6, byrow = T)
longley
length(longley)
rowsum(longley)
count(longley)
View(longley)
m3_mat = m3_mat - matrix(apply(m3_mat, 2, mean), 16,6, byrow = T)
m3_mat = m3_mat / matrix(apply(m3_mat, 2, sd), 16,6, byrow = T)
apply(m3_mat,2,mean)
apply(m3_mat,2,var)
sqrt(e$val[1]/e$val)
#condition number
e = eigen(t(m3_mat) %*% m3_mat)
sqrt(e$val[1]/e$val)
#b
round(vif(m3_mat), dig=2)
#b
#pairwise correlation
round(cor(longley), dig=2)
#c
round(vif(m3_mat), dig=2)
sqrt(vif(m3_mat)$GNP)
sqrt(vif(m3_mat)$[2])
#GNP
sqrt(1788.51)
#Year
sqrt(758.98)
#Population
sqrt(399.15)
#b
#pairwise correlation
round(cor(longley), dig=2)
CancerR = data.frame(read.csv(file = 'SBAnational.csv',header = T))
setwd("\Users\chanm\Desktop\STATclasses\Aaron\STAT426")
setwd("Users\chanm\Desktop\STATclasses\Aaron\STAT426")
setwd("\Users\chanm\Desktop\STATclasses\Aaron\STAT426")
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'SBAnational.csv',header = T))
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
head(CancerR)
mod1 = glm(LI ~ .)
mod1 = glm(LI ~ ., data = CancerR)
View(CancerR)
summary(mod1)
#Problem 2
mod1 = glm(LI ~ ., family = binomial ,data = CancerR)
summary(mod1)
head(CancerR)
#Problem 2
mod1 = glm(NR ~ LI ,data = CancerR, family = binomial)
summary(mod1)
#Problem 2
mod1 = glm(NR ~ LI ,data = CancerR, family = binomial)
summary(mod1)
head(CancerR)
#Problem 2
as.factor(CancerR$NR)
mod1 = glm(NR ~ LI ,data = CancerR, family = binomial)
summary(mod1)
View(CancerR)
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(NR ~ Remission ,data = CancerR, family = binomial)
summary(mod1)
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8))
#a
predict(mod1, data.frame(LI = 8), type = "prob")
#a
predict(mod1, data.frame(LI = 8), type = "response")
mod1 = glm(NR ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(NR ~ log(LI) ,data = CancerR, family = binomial)
mod1 = glm(Remission ~ log(LI) ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
malform <- data.frame(Present=c(48, 38, 5, 1, 1),
Absent=c(17066, 14464, 788, 126, 37),
Drinks=factor(c("0", "<1", "1-2", "3-5", ">=6")))
malform
mffit <- glm(cbind(Present,Absent) ~ Drinks, family=binomial, data=malform)
summary(mffit)
View(malform)
as.factor(CancerR$LI)
mod1 = glm(cbind(NC,NR) ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(NR ~ LI ,data = CancerR, family = binomial)
as.factor(CancerR$LI)
mod1 = glm(NR ~ LI ,data = CancerR, family = binomial)
mod1 = glm(NC ~ LI ,data = CancerR, family = binomial)
mod1 = glm(cbind(NC,NR) ~ LI ,data = CancerR, family = binomial)
summary(mod1)
as.factor(CancerR$LI)
mod1 = glm(cbind(NC,Remission) ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(cbind(NR,Remission) ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(cbind(Remission,Remission) ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(cbind(Remission,NR) ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(cbind(Remission,NC) ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(-2*(Remission) ~ LI ,data = CancerR, family = binomial)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binary)
summary(mod1)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial(link = "logit"))
summary(mod1)
#Problem 2
CancerR$Remission = c(rep(1,5),2,2,2,1,2,2,1,2,2)
as.factor(CancerR$LI)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
#Problem 2
CancerR$Remission = c(rep(1,5),2,2,2,1,2,2,1,2,2)
as.factor(CancerR$LI)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,1,1,1)
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
#Problem 2
CancerR$Remission = as.factor(c(rep(0,5),1,1,1,0,1,1,0,1,1))
as.factor(CancerR$LI)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
#Problem 2
CancerR$Remission = as.numeric(c(rep(0,5),1,1,1,0,1,1,0,1,1))
as.factor(CancerR$LI)
mod1 = glm(Remission ~ LI ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI + NC ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI + NR ,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI + NC,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
source('C:/Users/chanm/Desktop/STATclasses/Aaron/STAT426/STAT426 HW4.R')
View(CancerR)
mod1 = glm(Remission ~ LI*NR,data = CancerR, family = binomial)
summary(mod1)
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
CancerR$Remission = as.numeric(c(rep(0,5),1,1,1,0,1,1,0,1,1))
as.factor(CancerR$LI)
mod1 = glm(Remission ~ LI*NR,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#Problem 2
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
as.factor(CancerR$LI)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
as.numeric(CancerR$LI)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI*NR,data = CancerR, family = binomial)
mod1 = glm(Remission ~ facotor(LI),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ factor(LI),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#Problem 2
library(MASS)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial) %>% stepAIC(trace=F)
library(tidyverse)
library(caret)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial) %>% stepAIC(trace=F)
summary(mod1)
mod1 = glm(NR ~ LI,data = CancerR, family = binomial) %>% stepAIC(trace=F)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial) %>% stepAIC(trace=T)
summary(mod1)
CancerR$Remission = c(rep(0,5),1,0,1,0,1,1,0,1,0)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial) %>% stepAIC(trace=T)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
sum(CancerR$NC)
source('C:/Users/chanm/Desktop/STATclasses/Aaron/STAT426/STAT426 HW4.R')
Li_act = c(rep(CancerR$LI,CancerR$NR))
Li_act
Li_act = c(rep(as.numeric(CancerR$LI),as.numeric(CancerR$NR)))
Li_act = c(rep(as.numeric(CancerR$LI),as.numeric(CancerR$NR)))
Li_act
Li_act = as.data.frame(lapply(CancerR, rep, CancerR$NC))
Li_act
#Remission data for each patient
byPatient = as.data.frame(lapply(CancerR, rep, CancerR$NC))
mod1 = glm(Remission ~ LI,data = byPatient, family = binomial)
summary(mod1)
#Remission data for each patient
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
#Remission data for each patient
mod1 = glm(Remission ~ LI + NC,data = CancerR, family = binomial)
summary(mod1)
deathpenalty <- read.table("deathpenalty.txt")
deathpenalty
dp <- reshape(deathpenalty, v.names="Freq", timevar="DeathPenalty",
idvar=c("Defendant","Victim"), direction="wide")
dp
mod1 = glm(Remission ~ LI + factor(NC),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI + NC,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI + NR,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI + facttor(NR),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI + NC,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
source('C:/Users/chanm/Downloads/ex5.3 (1).R', echo=TRUE)
horseshoe <- read.table("horseshoe.txt", header=TRUE)
head(horseshoe)
hsfit <- glm(y ~ factor(color) + width, family=binomial, data=horseshoe)
summary(hsfit)
mod1 = glm(Remission ~ LI + NR +NC,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI^2,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ I(LI^2),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ log(LI),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ log(LI^2),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ ln(LI),data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = exponential)
mod1 = glm(Remission ~ LI,data = CancerR, family = exp)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial("probit"))
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial("cauchit"))
summary(mod1)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a binary remission column 1=remission 0=no remission
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial("cauchit"))
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial("log"))
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial("cloglog"))
summary(mod1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#Problem 2
#add a binary remission column 1=remission 0=no remission
Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
#Problem 2
#add a binary remission column 1=remission 0=no remission
Remission = data.frame(c(rep(0,5),1,1,1,0,1,1,0,1,1))
View(CancerR)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a binary remission column 1=remission 0=no remission
Remission = data.frame(c(rep(0,5),1,1,1,0,1,1,0,1,1))
View(Remission)
View(CancerR)
#Problem 2
#add a binary remission column 1=remission 0=no remission
Remission = data.frame(Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1))
library(tidyverse)
library(caret)
library(leaps)
install.packages("leaps")
library(leaps)
library(MASS)
full = glm(NR ~ ., data = CancerR)
step.mod = stepAIC(full,direction = "both",trace = F)
summary(step.mod)
full = glm(Remission$Remission ~ ., data = CancerR)
step.mod = stepAIC(full,direction = "both",trace = F)
summary(step.mod)
full = glm(NR ~ ., data = CancerR)
step.mod = stepAIC(full,direction = "both",trace = F)
summary(step.mod)
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a binary remission column 1=remission 0=no remission
CancerR$Remission = data.frame(Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1))
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a binary remission column 1=remission 0=no remission
CancerR$Remission = data.frame(Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1))
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a binary remission column 1=remission 0=no remission
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
horseshoe <- read.table("horseshoe.txt", header=TRUE)
View(horseshoe)
deathpenalty <- read.table("deathpenalty.txt")
deathpenalty
View(deathpenalty)
deathpenalty
View(deathpenalty)
testing = data.frame(lapply(CancerR, rep, CancerR$NC))
View(testing)
mod2 = glm(Remission ~ LI,data = testing, family = binomial)
summary(mod2)
#b
coef(mod1)
-coef(mod1)[1]/coef(mod1)[2]
mod1 = glm(Remission ~ LI/100,data = CancerR, family = binomial)
summary(mod1)
#Problem 2
#add a binary remission column 1=remission 0=no remission
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI/100,data = CancerR, family = binomial)
mod1 = glm(Remission ~ I(LI/100),data = CancerR, family = binomial)
summary(mod1)
source('C:/Users/chanm/Desktop/STATclasses/Aaron/STAT426/STAT426 HW4.R')
