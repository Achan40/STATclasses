#weighted model
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
summary(mod2)$sig^2
#estimate sigma-sq
cbind(summary(mod2u)$sig^2, sum(gu$res^2)/61)
#estimate sigma-sq
cbind(summary(mod2u)$sig^2, sum(mod2u$res^2)/61)
#WLS, these two do not agree
summary(mod2)$sig^2
legend("topleft", col=c("red"), lty=c(1,2), legend=c("WLS"))
#Problem 2
data(gammaray)
#weighted model
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
plot(flux ~ time, data = gammaray, cex=sd);
plot(flux ~ time, data = gammaray, cex=error);
points(flux ~ time, data=gammaray, pch=2)
abline(mod2, col="red", lty=1, lwd=2);
legend("topleft", col=c("red"), lty=c(1,2), legend=c("WLS"))
#Trying with poly nomials
mod2sq = lm(flux ~ time + I(time^2), data = gammaray, weights = 1/error^2 )
anova(mod2,mod2sq)
group = data.frame(x=c(0,1,2), number of trials =c(1,1,1), Y = c(1,2,1))
#Problem 2
data(gammaray)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
round(summary(mod2)$coef,dig = 3)
g2 = lm(flux ~ time + I(time^2), data = gammaray, weights = 1/error^2)
round(summary(g2)$coef,dig=3)
g3 = lm(flux ~ time + I(time^2) + I(time^3), data = gammaray , weights = 1/error^2)
round(summary(g3)$coef,dig=3) # Select d=2
summary(mod2)
mod2 = glm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
#Problem 2
data(gammaray)
mod2 = lm(flux ~ time, data = gammaray, weights = 1/error^2 )
summary(mod2)
g2 = lm(flux ~ time + I(time^2), weights = sd^-2, gammaray)
round(summary(g2)$coef,dig=3)
g3 = lm(flux ~ time + I(time^2) + I(time^3) , weights = sd^-2, gammaray)
round(summary(g3)$coef,dig=3)
g4 = lm(flux ~ time + I(time^2) + I(time^3) + I(time^4), weights = sd^-2, gammaray)
round(summary(g4)$coef,dig=3)
g2 = lm(flux ~ time + I(time^2), weights = error^-2, gammaray)
round(summary(g2)$coef,dig=3)
g3 = lm(flux ~ time + I(time^2) + I(time^3) , weights = error^-2, gammaray)
round(summary(g3)$coef,dig=3)
g4 = lm(flux ~ time + I(time^2) + I(time^3) + I(time^4), weights = error^-2, gammaray)
round(summary(g4)$coef,dig=3)
#Problem 3
data(longley)
head(longley)
mod3 = lm(Employed~.,data = longley)
e$val
#a
#condition number
m3_mat = model.matrix(mod3)[,-1]
e = eigen(t(m3_mat) %.% m3_mat)
e$val
e = eigen(t(m3_mat) %*% m3_mat)
e$val
e$val
summary(mod3)
e$val
length(longley)
#standardize matrix
m3_mat = model.matrix(mod3)[,-1]
m3_mat = m3_mat - matrix(apply(m3_mat, 2, mean), 7,6, byrow = T)
m3_mat = m3_mat - matrix(apply(m3_mat, 2, mean), 7,6, byrow = T)
longley
length(longley)
rowsum(longley)
count(longley)
View(longley)
m3_mat = m3_mat - matrix(apply(m3_mat, 2, mean), 16,6, byrow = T)
m3_mat = m3_mat / matrix(apply(m3_mat, 2, sd), 16,6, byrow = T)
apply(m3_mat,2,mean)
apply(m3_mat,2,var)
sqrt(e$val[1]/e$val)
#condition number
e = eigen(t(m3_mat) %*% m3_mat)
sqrt(e$val[1]/e$val)
#b
round(vif(m3_mat), dig=2)
#b
#pairwise correlation
round(cor(longley), dig=2)
#c
round(vif(m3_mat), dig=2)
sqrt(vif(m3_mat)$GNP)
sqrt(vif(m3_mat)$[2])
#GNP
sqrt(1788.51)
#Year
sqrt(758.98)
#Population
sqrt(399.15)
#b
#pairwise correlation
round(cor(longley), dig=2)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a binary remission column 1=remission 0=no remission
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ factor(LI),data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
#a
predict(mod1, data.frame(LI = 8), type = "prob")
#a
predict(mod1, data.frame(LI = 8), type = "response")
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
deathpenalty <- read.table("deathpenalty.txt")
deathpenalty
dp <- reshape(deathpenalty, v.names="Freq", timevar="DeathPenalty",
idvar=c("Defendant","Victim"), direction="wide")
dp
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
as.table(CancerR)
levels(CancerR$LI)
as.factor(CancerR$LI)
levels(CancerR$LI)
factor(CancerR$LI)
CancerR$LI = as.factor(CancerR$LI)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
LI = matrix(c(24,35,21,30,1355,603,192,224), nc=2)
View(LI)
View(CancerR)
LI = matrix(c(rep(0,5),1,2,1,0,1,1,0,1,2,2,2,3,3,3,0,1,1,1,0,0,1,0,1), nc=2)
View(LI)
rep(8:36,by=2)
seq(8,36,by=2)
Remis.df = data.frame(LI = gl(14,1, labels = c(seq(8,36,by = 2))),
Remission = gl(2,14,labels = c("Yes","No")),
counts = as.vector(Remis))
Remis = matrix(c(rep(0,5),1,2,1,0,1,1,0,1,2,2,2,3,3,3,0,1,1,1,0,0,1,0,1), nc=2)
Remis.df = data.frame(LI = gl(14,1, labels = c(seq(8,36,by = 2))),
Remission = gl(2,14,labels = c("Yes","No")),
counts = as.vector(Remis))
View(Remis.df)
snoring <- matrix(c(24,35,21,30,1355,603,192,224), nc=2)
snoring.df <- data.frame(snoring=gl(4, 1, labels=c("Never", "Occasional",
"Nearly every night",
"Every night")),
disease=gl(2, 4, labels=c("Yes", "No")),
counts=as.vector(snoring))
View(snoring.df)
Remis.df = Remis.df[rep(seq_len(nrow(Remis.df)),Remis.df$counts),1:2]
View(Remis.df)
snoring.df <- snoring.df[rep(seq_len(nrow(snoring.df)), snoring.df$counts), 1:2]
View(snoring.df)
View(snoring)
View(snoring.df)
View(Remis.df)
levels(snoring.df$snoring) <- c(0, 2, 4, 5)
y <- abs(as.numeric(snoring.df$disease)-2)
x <- as.numeric(as.character(snoring.df$snoring))
fit.glm1 <- glm(y ~ x, family=binomial)
summary(fit.glm1)
fit.glm2 <- glm(snoring ~ c(0, 2, 4, 5), family=binomial)
summary(fit.glm2)
summary(fit.glm1)
mod.t = glm(y~x,family = binomial)
summary(mod.t)
y = abs(as.numeric(Remis.df$Remission))
x = as.numeric(as.character(Remis.df$LI))
mod.t = glm(y~x,family = binomial)
y = abs(as.numeric(Remis.df$Remission)-2)
x = as.numeric(as.character(Remis.df$LI))
mod.t = glm(y~x,family = binomial)
summary(mod.t)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
##################################
Remis = matrix(c(rep(0,5),1,2,1,0,1,1,0,1,2,2,2,3,3,3,0,1,1,1,0,0,1,0,1), nc=2)
Remis.df = data.frame(LI = gl(14,1, labels = c(seq(8,36,by = 2))),
Remission = gl(2,14,labels = c("Yes","No")),
counts = as.vector(Remis))
Remis.df = Remis.df[rep(seq_len(nrow(Remis.df)),Remis.df$counts),1:2]
levels(Remis.df$LI) = c(seq(8,36,by = 2))
y = abs(as.numeric(Remis.df$Remission)-2)
y
x = as.numeric(as.character(Remis.df$LI))
mod.t = glm(y~x,family = binomial)
summary(mod.t)
glm(as.table(Remis)~c(seq(8,36,by = 2)), family = binomial)
Remis
View(CancerR)
Remis.df = data.frame(LI = gl(14,1, labels = c(seq(8,36,by = 2))),
Remission = gl(2,14,labels = c("Yes","No")),
counts = as.vector(Remis))
Remis.df
Remis.df = Remis.df[rep(seq_len(nrow(Remis.df)),Remis.df$counts),1:2]
Remis.df
levels(Remis.df$LI) = c(seq(8,36,by = 2))
y = abs(as.numeric(Remis.df$Remission)-2)
x = as.numeric(as.character(Remis.df$LI))
mod.t = glm(y~x,family = binomial)
summary(mod.t)
tab.R = table(x,y, dnn=c('LI','Remission'))
glm(tab.R ~ as.numeric(rownames(tab.R)),family = binomial)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a binary remission column 1=remission 0=no remission
CancerR$Remission = c(rep(0,5),1,1,1,0,1,1,0,1,1)
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
#b
coef(mod2)
-coef(mod2)[1]/coef(mod2)[2]
#################################################
testing = data.frame(lapply(CancerR, rep, CancerR$NC))
mod2 = glm(cbind(NC,NR) ~ LI,data = testing, family = binomial)
summary(mod2)
##################################
Remis = matrix(c(rep(0,5),1,2,1,0,1,1,0,1,2,2,2,3,3,3,0,1,1,1,0,0,1,0,1), nc=2)
Remis.df = data.frame(LI = gl(14,1, labels = c(seq(8,36,by = 2))),
Remission = gl(2,14,labels = c("Yes","No")),
counts = as.vector(Remis))
Remis.df = Remis.df[rep(seq_len(nrow(Remis.df)),Remis.df$counts),1:2]
levels(Remis.df$LI) = c(seq(8,36,by = 2))
y = abs(as.numeric(Remis.df$Remission)-2)
x = as.numeric(as.character(Remis.df$LI))
mod.t = glm(y~x,family = binomial)
summary(mod.t)
y = abs(as.numeric(Remis.df$Remission))
x = as.numeric(as.character(Remis.df$LI))
mod.t = glm(y~x,family = binomial)
predict(mod.t, data.frame(x= 8), type = "response")
coef(mod.t)
-coef(mod.t)[1]/coef(mod.t)[2]
##################################
Remis = matrix(c(rep(0,5),1,2,1,0,1,1,0,1,2,2,2,3,3,3,0,1,1,1,0,0,1,0,1), nc=2)
Remis.df = data.frame(LI = gl(14,1, labels = c(seq(8,36,by = 2))),
Remission = gl(2,14,labels = c("Yes","No")),
counts = as.vector(Remis))
Remis.df = Remis.df[rep(seq_len(nrow(Remis.df)),Remis.df$counts),1:2]
levels(Remis.df$LI) = c(seq(8,36,by = 2))
y = as.numeric(Remis.df$Remission)
x = as.numeric(as.character(Remis.df$LI))
mod.t = glm(y~x,family = binomial)
summary(mod.t)
tab.R = table(x,y, dnn=c('LI','Remission'))
glm(tab.R ~ as.numeric(rownames(tab.R)),family = binomial)
View(testing)
#################################################
testing = data.frame(lapply(CancerR, rep, CancerR$NC))
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
View(CancerR)
#################################################
CancerR$Remission_Y =
CancerR$Remission_N = CancerR$NC - CancerR$NR
View(CancerR)
#################################################
CancerR$Remission_Y = CancerR$NR
CancerR$Remission_N = CancerR$NC - CancerR$NR
mod2 = glm(cbind(Remission_Y,Remission_N) ~ LI,data = testing, family = binomial)
mod2 = glm(cbind(Remission_Y,Remission_N) ~ LI,data = CancerR, family = binomial)
summary(mod2)
#Problem 2
#add a counts for number of Remission and number not in Remission
CancerR$Remission_Y = CancerR$NR
CancerR$Remission_N = CancerR$NC - CancerR$NR
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
summary(mod1)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 2
#add a counts for number of Remission and number not in Remission
CancerR$Remission_Y = CancerR$NR
CancerR$Remission_N = CancerR$NC - CancerR$NR
mod1 = glm(Remission ~ LI,data = CancerR, family = binomial)
mod1 = glm(cbind(Remission_Y,Remission_N) ~ LI,data = CancerR, family = binomial)
summary(mod1)
source('C:/Users/chanm/Desktop/STATclasses/Aaron/STAT426/STAT426 HW4.R')
#Problem 1
ung = data.frame(trials = c(1:12),
x = c(0,0,0,0,1,1,1,1,2,2,2,2),
y = c(1,0,0,0,1,1,0,0,1,1,1,1))
g =  data.frame(x = c(0,1,2),
n = c(4,4,4),
y = c(1,2,4))
#a
mod= glm(y ~ x,family = binomial,data = ung)
summary(mod)
coef(mod)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 1
ungr = data.frame(trials = c(1:12),
x = c(0,0,0,0,1,1,1,1,2,2,2,2),
y = c(1,0,0,0,1,1,0,0,1,1,1,1))
gr =  data.frame(x = c(0,1,2),
n = c(4,4,4),
y = c(1,2,4))
#a
mod1a = glm(y ~ x,family = binomial,data = ungr)
summary(mod1a)
g$yes=gr$Y
g$no=gr$n-gr$Y
g$yes=gr$y
g$no=gr$n-gr$y
View(g)
View(gr)
mod1 = glm(cbind(yes,no)~X,family=binomial,data=gr)
mod1 = glm(cbind(yes,no) ~ x, family=binomial, data=gr)
g$yes = gr$y
g$no = gr$n - gr$y
mod1 = glm(cbind(yes,no) ~ x, family=binomial, data=gr)
mod1 = glm(cbind(yes,no) ~ x, family=binomial, data=g)
summary(mod1)
#grouped
gr$yes = gr$y
gr$no = gr$n - gr$y
mod1 = glm(cbind(yes,no) ~ x, family=binomial, data=gr)
summary(mod1)
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 1
ungr = data.frame(trials = c(1:12),
x = c(0,0,0,0,1,1,1,1,2,2,2,2),
y = c(1,0,0,0,1,1,0,0,1,1,1,1))
gr =  data.frame(x = c(0,1,2),
n = c(4,4,4),
y = c(1,2,4))
#a
#ungrouped
mod1a = glm(y ~ x,family = binomial,data = ungr)
summary(mod1a)
#grouped
gr$yes = gr$y
gr$no = gr$n - gr$y
mod1 = glm(cbind(yes,no) ~ x, family=binomial, data=gr)
summary(mod1)
#Part C
nullD_ug=16.301
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 1
ungr = data.frame(trials = c(1:12),
x = c(0,0,0,0,1,1,1,1,2,2,2,2),
y = c(1,0,0,0,1,1,0,0,1,1,1,1))
gr =  data.frame(x = c(0,1,2),
n = c(4,4,4),
y = c(1,2,4))
#a
#ungrouped
mod1a = glm(y ~ x,family = binomial,data = ungr)
summary(mod1a)
names(mod1a)
mod1a$null.deviance
mod1a$deviance
#grouped
gr$yes = gr$y
gr$no = gr$n - gr$y
mod1a2 = glm(cbind(yes,no) ~ x, family=binomial, data=gr)
summary(mod1a2)
#Part C
NullD.ungr = mod1a$null.deviance
ResD.ungr = mod1a$deviance
NullD.gr= mod1a2$null.deviance
ResD.gr= mod1a2$null.deviance
NullD.ungr - NullD.gr #difference is 10.044
ResD.ungr - ResD.gr #difference is 10.044
ResD.gr= mod1a2$deviance
NullD.ungr - NullD.gr #difference is 10.044
ResD.ungr - ResD.gr #difference is 10.044
NullD.ungr
ResD.ungr
NullD.gr
ResD.gr
#c
NullD.ungr - NullD.gr #difference of 10.04386
ResD.ungr - ResD.gr #difference of 10.04386
1 - pchisq(deviance(mod1a),df.residual(mod1a))
1 - pchisq(deviance(mod1a2),df.residual(mod1a2))
#Problem 2
#add a counts for number of Remission and number not in Remission
CancerR$Remission_Y = CancerR$NR
CancerR$Remission_N = CancerR$NC - CancerR$NR
mod1 = glm(cbind(Remission_Y,Remission_N) ~ LI,data = CancerR, family = binomial)
summary(mod1)
#a
predict(mod1, data.frame(LI = 8), type = "response")
#Problem 2
#add a counts for number of Remission and number not in Remission
CancerR$Remission_Y = CancerR$NR
CancerR$Remission_N = CancerR$NC - CancerR$NR
mod2 = glm(cbind(Remission_Y,Remission_N) ~ LI,data = CancerR, family = binomial)
summary(mod2)
#a
predict(mod2, data.frame(LI = 8), type = "response")
#b
coef(mod2)
-coef(mod2)[1]/coef(mod2)[2]
#d
predict(mod2, data.frame(LI = 14), type = "response")
predict(mod2, data.frame(LI = 28), type = "response")
coef(mod2)
names(mod2)
mod2$coefficients
mod2$coefficients[2]
setwd("/Users/chanm/Desktop/STATclasses/Aaron/STAT426")
CancerR = data.frame(read.csv(file = 'cancer-remission.csv',header = T))
#Problem 1
ungr = data.frame(trials = c(1:12),
x = c(0,0,0,0,1,1,1,1,2,2,2,2),
y = c(1,0,0,0,1,1,0,0,1,1,1,1))
gr =  data.frame(x = c(0,1,2),
n = c(4,4,4),
y = c(1,2,4))
#a
#ungrouped
mod1a = glm(y ~ x,family = binomial,data = ungr)
summary(mod1a)
#grouped
gr$yes = gr$y
gr$no = gr$n - gr$y
mod1a2 = glm(cbind(yes,no) ~ x, family=binomial, data=gr)
summary(mod1a2)
#b
NullD.ungr = mod1a$null.deviance
ResD.ungr = mod1a$deviance
NullD.gr = mod1a2$null.deviance
ResD.gr = mod1a2$deviance
NullD.ungr
ResD.ungr
NullD.gr
ResD.gr
#c
NullD.ungr - NullD.gr #difference of 10.04386
ResD.ungr - ResD.gr #difference of 10.04386
1 - pchisq(deviance(mod1a),df.residual(mod1a))
1 - pchisq(deviance(mod1a2),df.residual(mod1a2))
#Problem 2
#add a counts for number of Remission and number not in Remission
CancerR$Remission_Y = CancerR$NR
CancerR$Remission_N = CancerR$NC - CancerR$NR
mod2 = glm(cbind(Remission_Y,Remission_N) ~ LI,data = CancerR, family = binomial)
summary(mod2)
a = mod2$coefficients[1]
b = mod2$coefficients[2]
#a
pihat.a = predict(mod2, data.frame(LI = 8), type = "response")
pihat.a
#b
-a/b
#c
b*pihat.a*(1-pihat.a)
#When LI = 8, the rate of change is approx 0.0092
pihat.c = predict(mod2, data.frame(LI = 26), type = "response")
b*pihat.c*(1-pihat.c)
#d
predict(mod2, data.frame(LI = 14), type = "response")
predict(mod2, data.frame(LI = 28), type = "response")
#e
exp(b)
#f
vcov(mod2)
predict(mod2, data.frame(LI = 28), type = "response",interv
)
library(MASS)
exp(confint(mod2))
exp(confint.default(mod2))
confint.default(mod2)
mod2
summary(mod2)
mod2$coefficients
names(mod2)
#h
library(aod)
install.packages("aod")
#h
library(aod)
wald.test(b = coef(mod2), Sigma = vcov(mod2))
#g
confint.default(mod2)
#g
exp(confint.default(mod2))
wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 2)
wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 1)
wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 3)
wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 2)
wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 1:2)
wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 2)
names(wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 2)
)
waldt = wald.test(b = coef(mod2), Sigma = vcov(mod2), Terms = 2)
names(wald)
names(waldt)
waldt$result
waldt$result[3]
waldt$result[1,]
waldt$result[,1]
waldt$result[3]
waldt$result[2]
waldt$result
source('C:/Users/chanm/Desktop/STATclasses/Aaron/STAT426/STAT426 HW4.R')
