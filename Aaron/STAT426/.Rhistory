probXmat = pnorm(Xmat,mewA,MatSum)*prior[1]+pnorm(Xmat,mewB,MatSum)*prior[2]
#5.1
prior = c(.11,.89)
mewA = t(matrix(list(2.2,3.7,4), nrow = 3, ncol = 1))
mewB = t(matrix(list(7,7.2,8.9), nrow = 3, ncol = 1))
Xmat = t(matrix(list(3.1,3.6,4.6), nrow = 3, ncol = 1))
MatSum = diag(4,3)
probXmat = pnorm(Xmat,mewA,MatSum)*prior[1]+pnorm(Xmat,mewB,MatSum)*prior[2]
sapply(Xmat, pnorm, mean = mewA, sd=MatSum)
vapply(Xmat, pnorm, mean = mewA, sd=MatSum)
sapply(Xmat, pnorm)
mewA
mewA = matrix(list(2.2,3.7,4), nrow = 3, ncol = 1)
mewB = matrix(list(7,7.2,8.9), nrow = 3, ncol = 1)
Xmat = matrix(list(3.1,3.6,4.6), nrow = 3, ncol = 1)
MatSum = diag(4,3)
probXmat = pnorm(Xmat,mewA,MatSum)*prior[1]+pnorm(Xmat,mewB,MatSum)*prior[2]
sapply(Xmat, pnor, mean)
sapply(Xmat, pnor, mean = 2.2)
sapply(Xmat, pnorm, mean = 2.2,sd=4)
sapply(Xmat, pnorm, mean = 2.2,sd=4)
sapply(Xmat, pnorm, mean = 3.7,sd=4)
sapply(Xmat, pnorm, mean = 7.4,sd=4)
mewA[1]
sapply(Xmat, pnorm, mean = mewA[1],sd=4)
sapply(Xmat, pnorm, mean = 2.2,sd=4)
sapply(Xmat, pnorm, mean = 3.7,sd=4)
sapply(Xmat, pnorm, mean = 7.4,sd=4)
sapply(Xmat, pnorm, mean = 7,sd=4)
sapply(Xmat, pnorm, mean = 7.2,sd=4)
sapply(Xmat, pnorm, mean = 8.9,sd=4)
A = sapply(Xmat, pnorm, mean = 2.2,sd=4)
B = sapply(Xmat, pnorm, mean = 3.7,sd=4)
C = sapply(Xmat, pnorm, mean = 7.4,sd=4)
D = sapply(Xmat, pnorm, mean = 7,sd=4)
E = sapply(Xmat, pnorm, mean = 7.2,sd=4)
EE = sapply(Xmat, pnorm, mean = 8.9,sd=4)
A*B*C
D*E*EE*prior[2]
Fuck+This
Fuck = A*B*C*prior[1]
This = D*E*EE*prior[2]
Fuck+This
Killme= Fuck+This
Fuck*prior[1]/Killme
pnorm(3.1,2.2,4)+pnorm(3.6,3.7,4)+pnorm(4.6,4,4)
pnorm(3.1,2.2,4)*pnorm(3.6,3.7,4)*pnorm(4.6,4,4)
pnorm(3.1,2.2,4)*pnorm(3.6,3.7,4)*pnorm(4.6,4,4)
pnorm(3.1,7,4)*pnorm(3.6,7.2,4)*pnorm(4.6,8.9,4)
A*prior[1]+B*prior[2]
A = pnorm(3.1,2.2,4)*pnorm(3.6,3.7,4)*pnorm(4.6,4,4)
B = pnorm(3.1,7,4)*pnorm(3.6,7.2,4)*pnorm(4.6,8.9,4)
A*prior[1]+B*prior[2]
A = pnorm(3.1,2.2,4)*pnorm(3.6,3.7,4)*pnorm(4.6,4,4)
B = pnorm(3.1,7,4)*pnorm(3.6,7.2,4)*pnorm(4.6,8.9,4)
C = A*prior[1]+B*prior[2]
A*prior[1]/C
C = A*B
A = pnorm(3.1,2.2,4)*pnorm(3.6,3.7,4)*pnorm(4.6,4,4)*prior[1]
B = pnorm(3.1,7,4)*pnorm(3.6,7.2,4)*pnorm(4.6,8.9,4)*prior[2]
C = A+B
A/C
B/c
#5.1
prior = c(.11,.89)
mewA = matrix(list(2.2,3.7,4), nrow = 3, ncol = 1)
mewB = matrix(list(7,7.2,8.9), nrow = 3, ncol = 1)
Xmat = matrix(list(3.1,3.6,4.6), nrow = 3, ncol = 1)
MatSum = diag(4,3)
probXmat = pnorm(Xmat,mewA,MatSum)*prior[1]+pnorm(Xmat,mewB,MatSum)*prior[2]
A = pnorm(3.1,2.2,4)*pnorm(3.6,3.7,4)*pnorm(4.6,4,4)*prior[1]
B = pnorm(3.1,7,4)*pnorm(3.6,7.2,4)*pnorm(4.6,8.9,4)*prior[2]
C = A+B
A/C
B/c
B
C
B/C
#5.1
prior = c(.29,.71)
priorA = c(3.2,3.4,4)
priorB = c(6.4,7.4,8)
sdS = 4
X = c(1.6,2.2,4.2)
A = pnorm(X[1],priorA[1],sdS)*pnorm(X[2],priorA[2],sdS)*pnorm(X[3],priorA[3],sdS)*prior[1]
B = pnorm(X[1],priorB[1],sdS)*pnorm(X[2],priorB[2],sdS)*pnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/c
B/c
B
c
C
B/C
A/C
B/C
ua = t(matrix(data = c(2.4,2.8,3.2), nrow = 1))
ub = t(matrix(data = c(6,7,8.8), nrow = 1))
standard = diag(x =4 , nrow = 3, ncol = 3)
X = t(matrix(data = c(1.9,2.8,3.2), nrow = 1))
.44 * dnorm(X, ua, standard) / (.44 * dnorm(X, ua, standard) +
.56 * dnorm(X, ub, standard))
ua = t(matrix(data = c(2.4,2.8,3.2), nrow = 1))
ub = t(matrix(data = c(6,7,8.8), nrow = 1))
standard = diag(x =4 , nrow = 3, ncol = 3)
X = t(matrix(data = c(1.9,2.8,3.2), nrow = 1))
.44 * pnorm(X, ua, standard) / (.44 * pnorm(X, ua, standard) +
.56 * pnorm(X, ub, standard))
ua = t(matrix(data = c(3.2,3.4,4), nrow = 1))
ub = t(matrix(data = c(6.4,7.4,8), nrow = 1))
standard = diag(x =4 , nrow = 3, ncol = 3)
X = t(matrix(data = c(1.6,2.2,4.2), nrow = 1))
.44 * pnorm(X, ua, standard) / (.44 * pnorm(X, ua, standard) +
.56 * pnorm(X, ub, standard))
.44 * dnorm(X, ua, standard) / (.44 * dnorm(X, ua, standard) +.56 * dnorm(X, ub, standard))
#5.1
prior = c(.29,.71)
priorA = c(3.2,3.4,4)
priorB = c(6.4,7.4,8)
sdS = 4
X = c(1.6,2.2,4.2)
A = dnorm(X[1],priorA[1],sdS)*dnorm(X[2],priorA[2],sdS)*dnorm(X[3],priorA[3],sdS)*prior[1]
B = dnorm(X[1],priorB[1],sdS)*dnorm(X[2],priorB[2],sdS)*dnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
ua = t(matrix(data = c(3.2,3.4,4), nrow = 1))
ub = t(matrix(data = c(6.4,7.4,8), nrow = 1))
standard = diag(x =4 , nrow = 3, ncol = 3)
X = t(matrix(data = c(1.6,2.2,4.2), nrow = 1))
.29 * pnorm(X, ua, standard) / (.29 * pnorm(X, ua, standard) +.71 * pnorm(X, ub, standard))
#5.1
prior = c(.29,.71)
priorA = c(3.2,3.4,4)
priorB = c(6.4,7.4,8)
sdS = 4
X = c(1.6,2.2,4.2)
A = pnorm(X[1],priorA[1],sdS)*pnorm(X[2],priorA[2],sdS)*pnorm(X[3],priorA[3],sdS)*prior[1]
B = pnorm(X[1],priorB[1],sdS)*pnorm(X[2],priorB[2],sdS)*pnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
#5.1
prior = c(.29,.71)
priorA = c(3.2,3.4,4)
priorB = c(6.4,7.4,8)
sdS = 4
X = c(1.6,2.2,4.2)
A = dnorm(X[1],priorA[1],sdS)*dnorm(X[2],priorA[2],sdS)*dnorm(X[3],priorA[3],sdS)*prior[1]
B = dnorm(X[1],priorB[1],sdS)*dnorm(X[2],priorB[2],sdS)*dnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
dnorm(1.6,3.2,4)
pnorm(1.6,3.2,4)
#5.1
prior = c(.56,.44)
priorA = c(2.6,2.9,3.7)
priorB = c(7.4,8.1,8.7)
sdS = 4
X = c(1.5,1.8,4.4)
A = dnorm(X[1],priorA[1],sdS)*dnorm(X[2],priorA[2],sdS)*dnorm(X[3],priorA[3],sdS)*prior[1]
B = dnorm(X[1],priorB[1],sdS)*dnorm(X[2],priorB[2],sdS)*dnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
.15/(.15+.05+.1+.12)
#5.8
.05/(.15+.05+.1+.12)
#5.8
.1/(.15+.05+.1+.12)
#5.8
.12/(.15+.05+.1+.12)
#5.9
.12/(.12+.04+.08+.10)
#5.9
.04/(.12+.04+.08+.10)
#5.9
.12/(.12+.01+.09)
#5.9
.01/(.12+.01+.09)
#5.9
.09/(.12+.01+.09)
#5.1
prior = c(.64,.36)
priorA = c(2,3.7,3.8)
priorB = c(7.3,7.4,7.5)
sdS = 2
X = c(1.5,1.6,2.4)
A = pnorm(X[1],priorA[1],sdS)*pnorm(X[2],priorA[2],sdS)*pnorm(X[3],priorA[3],sdS)*prior[1]
B = pnorm(X[1],priorB[1],sdS)*pnorm(X[2],priorB[2],sdS)*pnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
#5.1
prior = c(.63,.37)
priorA = c(2,3,3.1)
priorB = c(6.7,7,7.1)
sdS = 2
X = c(2.9,4.1,4.5)
A = pnorm(X[1],priorA[1],sdS)*pnorm(X[2],priorA[2],sdS)*pnorm(X[3],priorA[3],sdS)*prior[1]
B = pnorm(X[1],priorB[1],sdS)*pnorm(X[2],priorB[2],sdS)*pnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
#5.1
prior = c(.63,.37)
priorA = c(2,3,3.1)
priorB = c(6.7,7,7.1)
sdS = 2
X = c(2.9,4.1,4.5)
A = dnorm(X[1],priorA[1],sdS)*dnorm(X[2],priorA[2],sdS)*dnorm(X[3],priorA[3],sdS)*prior[1]
B = dnorm(X[1],priorB[1],sdS)*dnorm(X[2],priorB[2],sdS)*dnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
#or this too
ua = t(matrix(data = c(2.3,3,3.1), nrow = 1))
ub = t(matrix(data = c(6.7,7,7.1), nrow = 1))
standard = diag(x =2 , nrow = 3, ncol = 3)
X = t(matrix(data = c(2.9,4.1,4.5), nrow = 1))
prior[1] * dnorm(X, ua, standard) / (prior[1] * dnorm(X, ua, standard) + prior[2] * dnorm(X, ub, standard))
#5.1
prior = c(.64,.36)
priorA = c(2.4,2.5,3)
priorB = c(6,7.8,8.7)
sdS = 2
X = c(2,2.8,3.2)
A = dnorm(X[1],priorA[1],sdS)*dnorm(X[2],priorA[2],sdS)*dnorm(X[3],priorA[3],sdS)*prior[1]
B = dnorm(X[1],priorB[1],sdS)*dnorm(X[2],priorB[2],sdS)*dnorm(X[3],priorB[3],sdS)*prior[2]
C = A+B
A/C
B/C
setwd("/Users/chanm/Desktop/STATclasses/STAT426")
as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCadmissions = as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad
UCadmissions
UCad
#a
data("punting")
#Problem 1
library(faraway)
data("sat")
head(sat)
#a
sat_model1 = lm(total ~ expend+ratio+salary,data = sat)
#b
sat_model2 = lm(total ~ expend+ratio+salary+takers,data = sat)
summary(sat_model1)
summary(sat_model2)
#Problem 2
data("prostate")
head(prostate)
pro_model1 = lm(lpsa~.,data = prostate)
#a
confint(pro_model1,'age',level=.90)
confint(pro_model1,'age',level=.95)
#b
summary(pro_model1)#remove age,lbph,lcp,gleason,pgg45
pro_model2 = lm(lpsa ~ lcavol+lweight+svi,data = prostate)
summary(pro_model2)
#c
library(ellipse)
library(ggplot2)
CR95 = ellipse(pro_model1,c(4,5))#create confidence region for age&lbph
myCR = data.frame(CR95);
names(myCR) = c("age","lbph");
myCR[,'level']=as.factor(rep(.95,dim(CR95)[1]));
ggplot(data=myCR, aes(x=age, y=lbph, colour=level)) +
geom_path(aes(linetype=level), size=1.5) +
geom_point(x=coef(pro_model1)[4], y=coef(pro_model1)[5], shape=3, size=3, colour='red') +
geom_point(x=0, y=0, shape=1, size=3, colour='red')
#d
#permutation test corresponding to the t-test for age
n.iter = 2000;
tstats = numeric(n.iter);
for(i in 1:n.iter){
newprostate=prostate;
newprostate[,c(4)]=savings[sample(97),c(4)];
g = lm(lpsa ~., data=newprostate);
tstats[i] = summary(g)$coef[4,3]
}
length(tstats[tstats > summary(pro_model1)$coef[4,3]])/n.iter
#a
data("punting")
head(punting)
punt_model1 = lm(Distance ~ RStr+LStr+RFlex+LFlex,data = punting)
summary(punt_model1)
addmargins(UCad)
setwd("/Users/chanm/Desktop/STATclasses/STAT426")
UCadmissions = as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCadmissions
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad
addmargins(UCad)
UCadflat = ftable()
UCadflat = ftable(Admission~Gender+Department,data = UCad)
UCadflat
prop.table(UCadflat)
deathpenalty = read.table("deathpenalty.txt")
dp = xtabs(Freq ~ Defendant + DeathPenalty + Victim, data=deathpenalty)
dp = xtabs(Freq ~ Defendant + DeathPenalty + Victim, data=deathpenalty)
dpflat <- ftable(DeathPenalty ~ Victim + Defendant, data=dp)
prop.table(dpflat)
deathpenalty = read.table("deathpenalty.txt")
deathpenalty <- transform(deathpenalty,
+ DeathPenalty = relevel(DeathPenalty, "Yes"),
+ Defendant = relevel(Defendant, "White"),
+ Victim = relevel(Victim, "White"))
deathpenalty = read.table("deathpenalty.txt")
deathpenalty <- transform(deathpenalty,
DeathPenalty = relevel(DeathPenalty, "Yes"),
Defendant = relevel(Defendant, "White"),
Victim = relevel(Victim, "White"))
dp = xtabs(Freq ~ Defendant + DeathPenalty + Victim, data=deathpenalty)
dpflat <- ftable(DeathPenalty ~ Victim + Defendant, data=dp)
prop.table(dpflat)
dp[1,1,1] * dp[2,2,1] / (dp[1,2,1] * dp[2,1,1])
dp[1,1,1]
dp
dp[2,2,1]
dp
UCad
#estimated marginal odds ratio
mUCad = xtabs(Freq ~ Department + Gender, data = UCadmissions)
mUCad
#estimated marginal odds ratio
mUCad = xtabs(Freq ~ Department + Admission, data = UCadmissions)
mUCad
#estimated marginal odds ratio
mUCad = xtabs(Freq ~ Gender + Admission, data = UCadmissions)
mUCad
#marginal table
mUCad = xtabs(Freq ~ Gender + Admission, data = UCadmissions)
mUCad
#estimated marginal odds ratio
mUCad[1,1]*mUCad[2,2]/(mUCad[1,2]*mUCad[2,1])
UCad
UCadmissions
#marginal table
mUCad = xtabs(Freq ~ Gender + Admission, data = UCadmissions)
mUCad
#estimated marginal odds ratio
mUCad[1,1]*mUCad[2,2]/(mUCad[1,2]*mUCad[2,1])
#organizing data
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad
UCadmissions
UCadmissions_AB = UCadmissions[1:8]
UCadmissions_AB = UCadmissions[1:8,]
UCadmissions_CD = UCadmissions[9:16,]
UCadmissions_EF = UCadmissions[17:24,]
UCadmissions_AB
#organizing data
UCad_AB = xtabs(Freq~Gender+Department+Admission,data = UCadmissions_AB)
UCad_CD = xtabs(Freq~Gender+Department+Admission,data = UCadmissions_CD)
UCad_EF = xtabs(Freq~Gender+Department+Admission,data = UCadmissions_EF)
UCad_AB
UCadmissions_AB = UCadmissions[1:8,]
UCad_CD
dp
dp[1,1,1]
UCadmissions_CD = UCadmissions[9:16,]
UCadmissions_CD
UCad_CD
#estimated conditional odds ratios for Dept A,B
UCad_AB[1,1,1] * UCad_AB[2,2,1] / (UCad_AB[1,2,1] * UCad_AB[2,1,1])#No admission
UCad_AB[1,1,2] * UCad_AB[2,2,2] / (UCad_AB[1,2,2] * UCad_AB[2,1,2])#Admission
#estimated conditional odds ratios for Dept C,D
UCad_CD[3,3,1] * UCad_CD[4,2,1] / (UCad_CD[3,2,1] * UCad_CD[4,1,1])#No admission
UCad_CD[3,3,2] * UCad_CD[4,2,2] / (UCad_CD[3,2,2] * UCad_CD[4,1,2])#Admission
#estimated conditional odds ratios for Dept E,F
UCad_EF[5,1,1] * UCad_EF[6,2,1] / (UCad_EF[5,2,1] * UCad_EF[6,1,1])#No admission
UCad_EF[5,1,2] * UCad_EF[6,2,2] / (UCad_EF[5,2,2] * UCad_EF[6,1,2])#Admission
#marginal table
mUCad = xtabs(Freq ~ Gender + Admission, data = UCadmissions)
mUCad
#estimated marginal odds ratio
mUCad[1,1]*mUCad[2,2]/(mUCad[1,2]*mUCad[2,1])
setwd("/Users/chanm/Desktop/STATclasses/STAT426")
UCadmissions = as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCadmissions
UCadmissions_AB = UCadmissions[1:8,]
UCadmissions_CD = UCadmissions[9:16,]
UCadmissions_EF = UCadmissions[17:24,]
#organizing data
UCad_AB = xtabs(Freq~Gender+Department+Admission,data = UCadmissions_AB)
UCad_CD = xtabs(Freq~Gender+Department+Admission,data = UCadmissions_CD)
UCad_EF = xtabs(Freq~Gender+Department+Admission,data = UCadmissions_EF)
#estimated conditional odds ratios for Dept A,B
UCad_AB[1,1,1] * UCad_AB[2,2,1] / (UCad_AB[1,2,1] * UCad_AB[2,1,1])#No admission
UCad_AB[1,1,2] * UCad_AB[2,2,2] / (UCad_AB[1,2,2] * UCad_AB[2,1,2])#Admission
#estimated conditional odds ratios for Dept C,D
UCad_CD[3,3,1] * UCad_CD[4,2,1] / (UCad_CD[3,2,1] * UCad_CD[4,1,1])#No admission
UCad_CD[3,3,2] * UCad_CD[4,2,2] / (UCad_CD[3,2,2] * UCad_CD[4,1,2])#Admission
#estimated conditional odds ratios for Dept E,F
UCad_EF[5,1,1] * UCad_EF[6,2,1] / (UCad_EF[5,2,1] * UCad_EF[6,1,1])#No admission
UCad_EF[5,1,2] * UCad_EF[6,2,2] / (UCad_EF[5,2,2] * UCad_EF[6,1,2])#Admission
deathpenalty <- read.table("deathpenalty.txt")
deathpenalty <- transform(deathpenalty,
DeathPenalty = relevel(DeathPenalty, "Yes"),
Defendant = relevel(Defendant, "White"),
Victim = relevel(Victim, "White"))
death
deathpenalty
UCadmissions
setwd("/Users/chanm/Desktop/STATclasses/STAT426")
UCadmissions = as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCadmissions
#organizing data
UCad_A = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad_A
#organizing data
UCad_A = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)[,2]
#organizing data
UCad_A = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)[,2,]
UCad_A
UCad_A[,2,]
UCad_A[,2]
UCadmissions
UCadmissions[2,4]
UCadmissions[4,]
UCadmissions[:4,]
UCadmissions[1:4,]
A = UCadmissions[1:4,]
#organizing data
UCad_A = xtabs(Freq~Gender+Department+Admission,data = A)
UCad_A
UCadmissions
UCadmissions = transform(UCadmissions,
Department = relevel(Deparment,"A"),
Gender = relevel(Gender,"Male"),
Admission = relevel(Admission,"Y")
)
UCadmissions = transform(UCadmissions,
Department = relevel(Department,"A"),
Gender = relevel(Gender,"Male"),
Admission = relevel(Admission,"Y")
)
UCadmissions
#organizing data
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad
setwd("/Users/chanm/Desktop/STATclasses/STAT426")
UCadmissions = as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCadmissions
#organizing data
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad
setwd("/Users/chanm/Desktop/STATclasses/STAT426")
UCadmissions = as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCadmissions = transform(UCadmissions,
Department = relevel(Department,"A"),
Gender = relevel(Gender,"Male"),
Admission = relevel(Admission,"Y"))
UCadmissions
#organizing data
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad
#estimated conditional odds ratios Based on
dp[1,1,1] * dp[2,2,1] / (dp[1,2,1] * dp[2,1,1])
#estimated conditional odds ratios Based on
UCad[1,1,1] * UCad[2,2,1] / (UCad[1,2,1] * UCad[2,1,1])
#estimated conditional odds ratios Based on
UCad[1,1,1] * UCad[2,1,2] / (UCad[2,1,2] * UCad[2,1,1])
UCad[1,1,1]
[2,1,2]
UCad[2,1,2]
UCad[2,1,2] * UCad[2,1,1]
* UCad[2,1,1]
UCad[2,1,1]
#estimated conditional odds ratios Based on
UCad[1,1,1] * UCad[2,1,2] / (UCad[1,1,2] * UCad[2,1,1])
UCad[2,1,1] * UCad[3,1,2] / (UCad[2,1,2] * UCad[3,1,1])#odds ratio deptB
UCad[3,1,2]
dim(UCad)
UCad[1,2,1] * UCad[2,2,2] / (UCad[1,2,2] * UCad[2,2,1])#odds ratio deptB
oddsRation = function(x){
UCad[1,x,1] * UCad[2,x,2] / (UCad[1,x,2] * UCad[2,x,1])
}
oddsRatio = function(x){
UCad[1,x,1] * UCad[2,x,2] / (UCad[1,x,2] * UCad[2,x,1])
}
oddsRatio(1:6)
#estimated conditional odds ratios for each Department
oddsRatio = function(x){
UCad[1,x,1] * UCad[2,x,2] / (UCad[1,x,2] * UCad[2,x,1])
}
oddsRatio(1:6)
setwd("/Users/chanm/Desktop/STATclasses/STAT426")
UCadmissions = as.data.frame(read.csv(file = 'UC-Admissions.csv'),header=TRUE)
UCadmissions = transform(UCadmissions,
Department = relevel(Department,"A"),
Gender = relevel(Gender,"Male"),
Admission = relevel(Admission,"Y"))
UCadmissions
#organizing data
UCad = xtabs(Freq~Gender+Department+Admission,data = UCadmissions)
UCad
#estimated conditional odds ratios for each Department
oddsRatio = function(x){
UCad[1,x,1] * UCad[2,x,2] / (UCad[1,x,2] * UCad[2,x,1])
}
oddsRatio(1:6)
#marginal table
mUCad = xtabs(Freq ~ Gender + Admission, data = UCadmissions)
mUCad
#estimated marginal odds ratio
mUCad[1,1]*mUCad[2,2]/(mUCad[1,2]*mUCad[2,1])
